AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VPC:
    Type: String
    Default: vpc-0f8a463d3c84ab974

Resources:
  EKSRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
          - Effect: Allow
            Principal:
              Service: eks.amazonaws.com
            Action: sts:AssumeRole

  EKSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security group for Amazon EKS cluster"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 6443
          ToPort: 6443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 2379
          ToPort: 2380
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 10250
          ToPort: 10252
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: 6783
          ToPort: 6784
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 6783
          ToPort: 6783
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          CidrIp: 0.0.0.0/0

Outputs:
  EKSRoleArn:
    Value: !GetAtt EKSRole.Arn
    Export:
      Name: MyEKSRoleArn
  K8sSecurityGroupId:
    Value: !Ref EKSSecurityGroup
    Export:
      Name: MyEKSSecurityGroupId